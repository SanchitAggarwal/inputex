YUI.add("inputex-type",function(e,t){YUI.add("inputex-type",function(e){var t=e.Lang,n=e.inputEx;n.TypeField=function(e){n.TypeField.superclass.constructor.call(this,e)},e.extend(n.TypeField,n.Field,{renderComponent:function(){this.fieldValueWrapper=n.cn("div",{className:"inputEx-TypeField-FieldValueWrapper"}),this.fieldContainer.appendChild(this.fieldValueWrapper),this.propertyPanel=n.cn("div",{className:"inputEx-TypeField-PropertiesPanel"},{display:"none"});var e=[];for(var t in n.typeClasses)n.typeClasses.hasOwnProperty(t)&&e.push({value:t});this.typeSelect=new n.SelectField({label:"Type",choices:e,parentEl:this.propertyPanel}),this.groupOptionsWrapper=n.cn("div"),this.propertyPanel.appendChild(this.groupOptionsWrapper),this.button=n.cn("div",{className:"inputEx-TypeField-EditButton"}),this.button.appendChild(this.propertyPanel),this.fieldContainer.appendChild(this.button),this.rebuildGroupOptions()},initEvents:function(){n.TypeField.superclass.initEvents.call(this),e.one(this.button).on("click",this.onTogglePropertiesPanel,this,!0),e.one(this.propertyPanel).on("click",function(e){e.stopPropagation()},this,!0),this.typeSelect.on("updated",this.rebuildGroupOptions,this,!0)},rebuildGroupOptions:function(){try{var t=null;this.group&&(t=this.group.getValue(),this.group.close(),this.group.destroy(),this.groupOptionsWrapper.innerHTML="");var r=n.getFieldClass(this.typeSelect.getValue()),i={fields:r.groupOptions,parentEl:this.groupOptionsWrapper};this.group=new n.Group(i),t&&this.group.setValue({name:t.name,label:t.label}),this.group.on("updated",this.onChangeGroupOptions,this,!0),this.updateFieldValue()}catch(s){e.Lang.isObject(window.console)&&e.Lang.isFunction(window.console.log)&&console.log("inputEx.TypeField.rebuildGroupOptions: ",s)}},onTogglePropertiesPanel:function(){this.propertyPanel.style.display=="none"?(this.propertyPanel.style.display="",e.one(this.button).addClass(this.button,"opened")):(this.propertyPanel.style.display="none",e.one(this.button).removeClass("opened"))},onChangeGroupOptions:function(){this.updateFieldValue(),this.fireUpdatedEvt()},updateFieldValue:function(){try{this.fieldValue&&(this.fieldValue.close(),this.fieldValue.destroy(),delete this.fieldValue,this.fieldValueWrapper.innerHTML="");var t=this.group.getValue();t.type=this.getValue().type,t.parentEl=this.fieldValueWrapper,this.fieldValue=n(t,this),this.fieldValue.on("updated",this.fireUpdatedEvt,this,!0)}catch(r){e.Lang.isObject(window.console)&&e.Lang.isFunction(window.console.log)&&console.log("Error while updateFieldValue",r.message)}},setValue:function(e,n){this.typeSelect.setValue(e.type,!1),this.rebuildGroupOptions(),this.group.setValue(e,!1),this.updateFieldValue();var r=this;t.isUndefined(e.value)||setTimeout(function(){r.fieldValue.setValue(e.value,!1)},50),n!==!1&&this.fireUpdatedEvt(!1)},getValue:function(){var e=function(e,t){var n,r=e.groupOptions.length,i;for(n=0;n<r;n++){i=e.groupOptions[n];if(i.name==t)return i.value}return undefined},t=this.group.getValue(),r=n.getFieldClass(this.typeSelect.getValue());for(var i in t)if(t.hasOwnProperty(i)){var s=e(r,i),o=t[i];s==o&&(t[i]=undefined)}return t.type=this.typeSelect.getValue(),this.fieldValue&&(t.value=this.fieldValue.getValue()),t}}),n.registerType("type",n.TypeField,[])},"3.1.0",{requires:["inputex-field","inputex-group","inputex-select","inputex-list","inputex-string","inputex-checkbox","inputex-integer"]})},"@VERSION@");
